---
type Props = {
  id: string;
  columns: string[];
  data: { [key: string]: string | number | object }[];
};

const { id, columns, data } = Astro.props;

let keys: any[] = [];

if (data.length > 0) {
  keys = Object.keys(data[0]);
}
---

<table class="w-full p-4 table-auto border-collapse mt-14 mb-24" id={id}>
  <thead class="bg-zinc-500 text-amber-50 font-bold h-12 text-center">
    {
      columns.map((col) => {
        return col == "uuid" ? (
          <td hidden class="p-4">
            {col}
          </td>
        ) : (
          <td class="p-4">{col}</td>
        );
      })
    }
  </thead>
  <tbody id="table_content">
    {
      data.map((content) => {
        return (
          <tr class="text-center text-zinc-600 hover:bg-orange-200 cursor-pointer">
            {keys.map((key) => {
              return key == "ulid" ? (
                <td
                  hidden
                  class="border-b border-l text-center p-4 border-zinc-300 last:border-r">
                  {content[key]}
                </td>
              ) : (
                <td class="border-b border-l text-center p-4 border-zinc-300 last:border-r">
                  {content[key]}
                </td>
              );
            })}
          </tr>
        );
      })
    }
  </tbody>
</table>
