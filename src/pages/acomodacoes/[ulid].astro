---
import type { ZodType } from "astro:schema";
import { type ULID } from "../../actions/guest/findGuestByIDAction";
import Form from "../../components/Form.astro";
import TextInput from "../../components/TextInput.astro";
import Layout from "../../layouts/Layout.astro";
import { findAccommodationByIDAction } from "../../actions/accommodation/findAccommodationByULIDAction";
import type { Accommodation } from "../../schemas/accommodation";
import NumberInput from "../../components/NumberInput.astro";
import AmenitieSelector from "../../components/AmenitieSelector.astro";

const { params, callAction, redirect } = Astro;

const { ulid } = params;

const input = { ulid: ulid as string };

const result = await callAction<
  "json",
  ZodType<ULID>,
  Accommodation,
  typeof findAccommodationByIDAction
>(findAccommodationByIDAction, input);

if (result.error) {
  console.log(result.error);
  return redirect("/acomodacoes");
}

const accommodation = result.data;
---

<Layout>
  <main class="grow flex flex-col items-center">
    <Form id="update-accommodation-form">
      <div slot="inputs" class="flex flex-col w-full max-w-lg mx-auto">
        <TextInput hidden id="ulid" label="Id" value={accommodation.ulid} />
        <TextInput id="name" label="Nome" value={accommodation.name} />
        <TextInput id="status" label="Status" value={accommodation.status} />

        <div class="grid grid-cols-2">
          <NumberInput
            id="total_guests"
            label="Max. Hospedes"
            value={accommodation.total_guests}
          />
          <NumberInput
            id="single_beds"
            label="Cama Solteiro"
            value={accommodation.single_beds}
          />
          <NumberInput
            id="double_beds"
            label="Cama Casal"
            value={accommodation.double_beds}
          />
          <NumberInput id="price" label="PreÃ§o" value={accommodation.price} />
        </div>

        <AmenitieSelector accommodation={accommodation} />

        <div slot="buttons" class="w-full p-4 flex flex-col gap-8">
          <div slot="buttons" class="flex gap-5">
            <button
              id="update_button"
              class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-56"
              type="submit">Atualizar</button
            >
            <button
              id="delete_button"
              class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-56"
              type="button">Excluir</button
            >
          </div>
          <a
            href="/acomodacoes"
            id="back_btn"
            type="button"
            class="bg-zinc-600 hover:bg-zinc-400 text-white hover:text-zinc-800 font-bold py-2 text-center rounded-md mb-2 w-full">
            Voltar
          </a>
        </div>
      </div>
    </Form>
  </main>

  <script>
    import { actions } from "astro:actions";
    import { navigate } from "astro:transitions/client";

    handleDelete();
    handleUpdate();

    function handleDelete() {
      const deleteBtnElement = document.getElementById(
        "delete_button"
      ) as HTMLButtonElement;

      deleteBtnElement.addEventListener("click", async (event) => {
        const urlSegments = document.location.pathname.split("/");
        const ulid = urlSegments[urlSegments.length - 1];

        const result = await actions.deleteAccommodationAction({ ulid });

        if (result.error) {
          console.log(result.error);
          throw new Error("Not possible to delete accommodation");
        }

        return navigate("/acomodacoes");
      });
    }

    function handleUpdate() {
      const formElement = document.getElementById(
        "update-accommodation-form"
      ) as HTMLFormElement;

      formElement.addEventListener("submit", async (event) => {
        event.preventDefault();

        const formData = new FormData(formElement);
        const obj: any = {};

        formData.forEach((valor, chave) => {
          obj[chave] = valor;
        });

        const result = await actions.updateAccommodationAction(formData);

        if (result.error) {
          console.log(result.error);
          throw new Error("Not possible to update accommodation");
        }

        return navigate("/acomodacoes");
      });
    }
  </script>
</Layout>
