---
import Form from "../components/Form.astro";
import SelectCountryInput from "../components/SelectCountryInput.astro";
import Table from "../components/Table.astro";
import TextInput from "../components/TextInput.astro";
import Layout from "../layouts/Layout.astro";
import { guestSchema } from "../schemas/schemas";

const response = await fetch(`http://backend:8050/guests`);
const data = await response.json();
const parsedData = await guestSchema.array().parseAsync(data["guests"]);

const tableData = parsedData.map((guest) => {
  return {
    document: guest.document,
    name: `${guest.name} ${guest.surname}`,
    country: guest.country,
    phone: guest.phone,
    ulid: guest.ulid,
  };
});

let columns = ["Documento", "Nome", "País", "Telefone"];
---

<Layout>
  <div class="flex flex-col items-center">
    {
      columns.length > 0 && (
        <Table id="guest-table" columns={columns} data={tableData} />
      )
    }
    {columns.length == 0 && <p>Nenhum hóspede encontrado no banco de dados</p>}
    <a href="/hospedes/cadastro"
      ><button
        class="w-64 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
        >Cadastrar</button
      ></a
    >
  </div>

  <dialog
    id="guest_update_modal"
    class="p-4 bg-amber-50 text-zinc-700 text-lg font-['Poppins']">
    <Form id="update-guest-form">
      <div slot="inputs" class="flex flex-col w-full max-w-lg mx-auto">
        <TextInput hidden disabled id="ulid" label="ulid" />
        <TextInput
          disabled
          id="document"
          label="Documento"
          value={data.document}
        />
        <TextInput id="name" label="Nome" />
        <TextInput id="surname" label="Sobrenome" />
        <SelectCountryInput />
        <TextInput id="phone" label="Telefone" />
      </div>
      <div slot="buttons" class="w-full p-4 grid grid-cols-3 gap-8">
        <button
          id="update_button"
          class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded w-56"
          type="submit">Atualizar</button
        >
        <button
          id="delete_button"
          class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded w-56"
          type="button">Excluir</button
        >
        <a
          href="/hospedes"
          id="back_btn"
          type="button"
          class="bg-zinc-600 hover:bg-zinc-400 text-white hover:text-zinc-800 font-bold py-2 text-center rounded-md mb-2 w-full">
          Voltar
        </a>
      </div>
    </Form>
  </dialog>
</Layout>

<script>
  import { creationalGuestSchema } from "../schemas/schemas";
  import { getFormData } from "../utils/getFormData";

  let BACKEND_URL = "127.0.0.1";

  if (import.meta.env.PROD) {
    BACKEND_URL = "89.117.33.177";
  }

  const tableBody = document.getElementById("table_content");

  if (tableBody) {
    tableBody.addEventListener("click", async (event) => {
      const target = event.target as HTMLElement;
      const rows = target.parentNode as HTMLTableRowElement;
      const doc = rows.cells[0].textContent;
      if (doc) {
        const modal = document.getElementById(
          "guest_update_modal"
        ) as HTMLDialogElement;
        modal.showModal();

        const response = await fetch(
          `http://backend:8050/guests/${doc.trim()}`
        );
        const data = await response.json();

        (document.getElementById("ulid") as HTMLInputElement).value = data.ulid;
        (document.getElementById("document") as HTMLInputElement).value =
          data.document;
        (document.getElementById("name") as HTMLInputElement).value = data.name;
        (document.getElementById("surname") as HTMLInputElement).value =
          data.surname;
        (document.getElementById("country") as HTMLInputElement).value =
          data.country;
        (document.getElementById("phone") as HTMLInputElement).value =
          data.phone;
      }
    });
  }
  const form = document.getElementById("update-guest-form") as HTMLFormElement;
  const deleteButton = document.getElementById(
    "delete_button"
  ) as HTMLButtonElement;

  form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const dataWithoutDoc = getFormData(form);
    const doc_element = document.getElementById("document") as HTMLInputElement;
    const ulid_element = document.getElementById("ulid") as HTMLInputElement;
    const doc = doc_element.value;
    const ulid = ulid_element.value;

    const formData = {
      document: doc,
      ...dataWithoutDoc,
    };
    const data = creationalGuestSchema.parse(formData);

    const response = await fetch(`http://backend:8050/guests/${ulid}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    if (response.status === 200) {
      window.location.href = "/hospedes";
    }
  });

  deleteButton.addEventListener("click", async () => {
    const element = form.elements.namedItem("ulid") as HTMLInputElement;
    const ulid = element.value;
    const response = await fetch(`http://backend:8050/guests/${ulid}`, {
      method: "DELETE",
    });
    if (response.status === 200) {
      window.location.href = "/hospedes";
    }
  });
</script>
